services:
  postgres:
    container_name: postgres
    image: postgres:17
    ports:
      - "5432:5432"
    env_file: "config.env"
    volumes:
      - data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d

  postgres-admin:
    container_name: postgres-admin
    image: dpage/pgadmin4:latest
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "5050:80"
    env_file: "config.env"
    volumes:
      - ./servers.json:/pgadmin4/servers.json

  streamlit:
    container_name: streamlit
    build:
      context: ./streamlit
    depends_on:
      postgres:
        condition: service_started
    ports:
      - "8501:8501"
    env_file: "config.env"
    volumes:
      - ./streamlit/home.py:/app/home.py
      - ./streamlit/pages:/app/pages
      - ./streamlit/requirements.txt:/app/requirements.txt
      - ./streamlit/streamlit:/app/streamlit

  create-db:
    container_name: create-db
    build:
      context: ./create-db
    depends_on:
      postgres:
        condition: service_started
      postgres-admin:
        condition: service_started
    env_file: "config.env"
    profiles:
      - create-db-dw

  create-dw:
    container_name: create-dw
    build:
      context: ./create-dw
    depends_on:
      postgres:
        condition: service_started
      create-db:
        condition: service_completed_successfully
    env_file: "config.env"
    profiles:
      - create-db-dw
  
  update-db-dw:
    container_name: update-db-dw
    build:
      context: ./update-db-dw
    depends_on:
      postgres:
        condition: service_started
    env_file: "config.env"
    profiles:
      - update-db-dw

volumes:
  data:
